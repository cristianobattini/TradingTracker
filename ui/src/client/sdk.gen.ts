// This file is auto-generated by @hey-api/openapi-ts

import { type Options as ClientOptions, type TDataShape, type Client, urlSearchParamsBodySerializer } from './client';
import type { CreateUserUsersPostData, CreateUserUsersPostResponses, CreateUserUsersPostErrors, LoginLoginPostData, LoginLoginPostResponses, LoginLoginPostErrors, ReadUsersMeUsersMeGetData, ReadUsersMeUsersMeGetResponses, ListTradesTradesGetData, ListTradesTradesGetResponses, CreateTradeTradesPostData, CreateTradeTradesPostResponses, CreateTradeTradesPostErrors, GetReportReportGetData, GetReportReportGetResponses } from './types.gen';
import { client as _heyApiClient } from './client.gen';

export type Options<TData extends TDataShape = TDataShape, ThrowOnError extends boolean = boolean> = ClientOptions<TData, ThrowOnError> & {
    /**
     * You can provide a client instance returned by `createClient()` instead of
     * individual options. This might be also useful if you want to implement a
     * custom client.
     */
    client?: Client;
    /**
     * You can pass arbitrary values through the `meta` object. This can be
     * used to access values that aren't defined as part of the SDK function.
     */
    meta?: Record<string, unknown>;
};

/**
 * Create User
 */
export const createUserUsersPost = <ThrowOnError extends boolean = false>(options: Options<CreateUserUsersPostData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<CreateUserUsersPostResponses, CreateUserUsersPostErrors, ThrowOnError>({
        url: '/users/',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Login
 */
export const loginLoginPost = <ThrowOnError extends boolean = false>(options: Options<LoginLoginPostData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<LoginLoginPostResponses, LoginLoginPostErrors, ThrowOnError>({
        ...urlSearchParamsBodySerializer,
        url: '/login',
        ...options,
        headers: {
            'Content-Type': 'application/x-www-form-urlencoded',
            ...options.headers
        }
    });
};

/**
 * Read Users Me
 */
export const readUsersMeUsersMeGet = <ThrowOnError extends boolean = false>(options?: Options<ReadUsersMeUsersMeGetData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<ReadUsersMeUsersMeGetResponses, unknown, ThrowOnError>({
        url: '/users/me',
        ...options
    });
};

/**
 * List Trades
 */
export const listTradesTradesGet = <ThrowOnError extends boolean = false>(options?: Options<ListTradesTradesGetData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<ListTradesTradesGetResponses, unknown, ThrowOnError>({
        url: '/trades/',
        ...options
    });
};

/**
 * Create Trade
 */
export const createTradeTradesPost = <ThrowOnError extends boolean = false>(options: Options<CreateTradeTradesPostData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<CreateTradeTradesPostResponses, CreateTradeTradesPostErrors, ThrowOnError>({
        url: '/trades/',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Get Report
 */
export const getReportReportGet = <ThrowOnError extends boolean = false>(options?: Options<GetReportReportGetData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetReportReportGetResponses, unknown, ThrowOnError>({
        url: '/report/',
        ...options
    });
};