// This file is auto-generated by @hey-api/openapi-ts

/**
 * Body_login_login_post
 */
export type BodyLoginLoginPost = {
    /**
     * Grant Type
     */
    grant_type?: string | null;
    /**
     * Username
     */
    username: string;
    /**
     * Password
     */
    password: string;
    /**
     * Scope
     */
    scope?: string;
    /**
     * Client Id
     */
    client_id?: string | null;
    /**
     * Client Secret
     */
    client_secret?: string | null;
};

/**
 * HTTPValidationError
 */
export type HttpValidationError = {
    /**
     * Detail
     */
    detail?: Array<ValidationError>;
};

/**
 * ReportResponse
 */
export type ReportResponse = {
    /**
     * Total Profit
     */
    total_profit: number;
    /**
     * Total Loss
     */
    total_loss: number;
    /**
     * Win Probability
     */
    win_probability: number;
    /**
     * Loss Probability
     */
    loss_probability: number;
    /**
     * Avg Win
     */
    avg_win: number;
    /**
     * Avg Loss
     */
    avg_loss: number;
    /**
     * Expectancy
     */
    expectancy: number;
    /**
     * Capital
     */
    capital: number;
};

/**
 * RoleEnum
 */
export type RoleEnum = 'admin' | 'user';

/**
 * TokenSchema
 */
export type TokenSchema = {
    /**
     * Access Token
     */
    access_token: string;
    /**
     * Token Type
     */
    token_type: string;
};

/**
 * TradeCreate
 */
export type TradeCreate = {
    /**
     * Date
     */
    date: string;
    /**
     * Pair
     */
    pair: string;
    /**
     * System
     */
    system: string;
    /**
     * Action
     */
    action: string;
    /**
     * Risk
     */
    risk: string;
    /**
     * Risk Percent
     */
    risk_percent: number;
    /**
     * Lots
     */
    lots: number;
    /**
     * Entry
     */
    entry: number;
    /**
     * Sl1 Pips
     */
    sl1_pips: number;
    /**
     * Tp1 Pips
     */
    tp1_pips: number;
    /**
     * Sl2 Pips
     */
    sl2_pips: number;
    /**
     * Tp2 Pips
     */
    tp2_pips: number;
    /**
     * Cancelled
     */
    cancelled: boolean;
    /**
     * Profit Or Loss
     */
    profit_or_loss: number;
    /**
     * Comments
     */
    comments: string;
};

/**
 * TradeResponse
 */
export type TradeResponse = {
    /**
     * Date
     */
    date: string;
    /**
     * Pair
     */
    pair: string;
    /**
     * System
     */
    system: string;
    /**
     * Action
     */
    action: string;
    /**
     * Risk
     */
    risk: string;
    /**
     * Risk Percent
     */
    risk_percent: number;
    /**
     * Lots
     */
    lots: number;
    /**
     * Entry
     */
    entry: number;
    /**
     * Sl1 Pips
     */
    sl1_pips: number;
    /**
     * Tp1 Pips
     */
    tp1_pips: number;
    /**
     * Sl2 Pips
     */
    sl2_pips: number;
    /**
     * Tp2 Pips
     */
    tp2_pips: number;
    /**
     * Cancelled
     */
    cancelled: boolean;
    /**
     * Profit Or Loss
     */
    profit_or_loss: number;
    /**
     * Comments
     */
    comments: string;
    /**
     * Id
     */
    id: number;
    /**
     * Owner Id
     */
    owner_id: number;
};

/**
 * UserCreate
 */
export type UserCreate = {
    /**
     * Username
     */
    username: string;
    /**
     * Email
     */
    email: string;
    /**
     * Password
     */
    password: string;
    role?: RoleEnum;
    /**
     * Initial Capital
     */
    initial_capital?: number;
};

/**
 * UserResponse
 */
export type UserResponse = {
    /**
     * Id
     */
    id: number;
    /**
     * Username
     */
    username: string;
    /**
     * Email
     */
    email: string;
    role: RoleEnum;
    /**
     * Valid
     */
    valid: boolean;
    /**
     * Initial Capital
     */
    initial_capital: number;
};

/**
 * ValidationError
 */
export type ValidationError = {
    /**
     * Location
     */
    loc: Array<string | number>;
    /**
     * Message
     */
    msg: string;
    /**
     * Error Type
     */
    type: string;
};

export type CreateUserUsersPostData = {
    body: UserCreate;
    path?: never;
    query?: never;
    url: '/users/';
};

export type CreateUserUsersPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CreateUserUsersPostError = CreateUserUsersPostErrors[keyof CreateUserUsersPostErrors];

export type CreateUserUsersPostResponses = {
    /**
     * Successful Response
     */
    200: UserResponse;
};

export type CreateUserUsersPostResponse = CreateUserUsersPostResponses[keyof CreateUserUsersPostResponses];

export type LoginLoginPostData = {
    body: BodyLoginLoginPost;
    path?: never;
    query?: never;
    url: '/login';
};

export type LoginLoginPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type LoginLoginPostError = LoginLoginPostErrors[keyof LoginLoginPostErrors];

export type LoginLoginPostResponses = {
    /**
     * Successful Response
     */
    200: TokenSchema;
};

export type LoginLoginPostResponse = LoginLoginPostResponses[keyof LoginLoginPostResponses];

export type ReadUsersMeUsersMeGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/users/me';
};

export type ReadUsersMeUsersMeGetResponses = {
    /**
     * Successful Response
     */
    200: UserResponse;
};

export type ReadUsersMeUsersMeGetResponse = ReadUsersMeUsersMeGetResponses[keyof ReadUsersMeUsersMeGetResponses];

export type ListTradesTradesGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/trades/';
};

export type ListTradesTradesGetResponses = {
    /**
     * Response List Trades Trades  Get
     * Successful Response
     */
    200: Array<TradeResponse>;
};

export type ListTradesTradesGetResponse = ListTradesTradesGetResponses[keyof ListTradesTradesGetResponses];

export type CreateTradeTradesPostData = {
    body: TradeCreate;
    path?: never;
    query?: never;
    url: '/trades/';
};

export type CreateTradeTradesPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CreateTradeTradesPostError = CreateTradeTradesPostErrors[keyof CreateTradeTradesPostErrors];

export type CreateTradeTradesPostResponses = {
    /**
     * Successful Response
     */
    200: TradeResponse;
};

export type CreateTradeTradesPostResponse = CreateTradeTradesPostResponses[keyof CreateTradeTradesPostResponses];

export type GetReportReportGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/report/';
};

export type GetReportReportGetResponses = {
    /**
     * Successful Response
     */
    200: ReportResponse;
};

export type GetReportReportGetResponse = GetReportReportGetResponses[keyof GetReportReportGetResponses];

export type ClientOptions = {
    baseUrl: 'http://localhost:8000' | (string & {});
};