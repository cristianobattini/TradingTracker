// This file is auto-generated by @hey-api/openapi-ts

export type ClientOptions = {
    baseUrl: 'http://localhost:8000' | (string & {});
};

/**
 * Body_login_login_post
 */
export type BodyLoginLoginPost = {
    /**
     * Grant Type
     */
    grant_type?: string | null;
    /**
     * Username
     */
    username: string;
    /**
     * Password
     */
    password: string;
    /**
     * Scope
     */
    scope?: string;
    /**
     * Client Id
     */
    client_id?: string | null;
    /**
     * Client Secret
     */
    client_secret?: string | null;
};

/**
 * HTTPValidationError
 */
export type HttpValidationError = {
    /**
     * Detail
     */
    detail?: Array<ValidationError>;
};

/**
 * PasswordChange
 */
export type PasswordChange = {
    /**
     * Current Password
     */
    current_password: string;
    /**
     * New Password
     */
    new_password: string;
};

/**
 * ReportResponse
 */
export type ReportResponse = {
    /**
     * Total Profit
     */
    total_profit: number;
    /**
     * Total Loss
     */
    total_loss: number;
    /**
     * Win Probability
     */
    win_probability: number;
    /**
     * Loss Probability
     */
    loss_probability: number;
    /**
     * Avg Win
     */
    avg_win: number;
    /**
     * Avg Loss
     */
    avg_loss: number;
    /**
     * Expectancy
     */
    expectancy: number;
    /**
     * Capital
     */
    capital: number;
};

/**
 * RoleEnum
 */
export type RoleEnum = 'admin' | 'user';

/**
 * TokenSchema
 */
export type TokenSchema = {
    /**
     * Access Token
     */
    access_token: string;
    /**
     * Token Type
     */
    token_type: string;
    role: RoleEnum;
};

/**
 * TradeCreate
 */
export type TradeCreate = {
    /**
     * Date
     */
    date: string;
    /**
     * Pair
     */
    pair: string;
    /**
     * System
     */
    system: string;
    /**
     * Action
     */
    action: string;
    /**
     * Risk
     */
    risk: string;
    /**
     * Risk Percent
     */
    risk_percent: number;
    /**
     * Lots
     */
    lots: number;
    /**
     * Entry
     */
    entry: number;
    /**
     * Sl1 Pips
     */
    sl1_pips: number;
    /**
     * Tp1 Pips
     */
    tp1_pips: number;
    /**
     * Sl2 Pips
     */
    sl2_pips: number;
    /**
     * Tp2 Pips
     */
    tp2_pips: number;
    /**
     * Cancelled
     */
    cancelled: boolean;
    /**
     * Profit Or Loss
     */
    profit_or_loss: number;
    /**
     * Comments
     */
    comments: string;
};

/**
 * TradeResponse
 */
export type TradeResponse = {
    /**
     * Date
     */
    date: string;
    /**
     * Pair
     */
    pair: string;
    /**
     * System
     */
    system: string;
    /**
     * Action
     */
    action: string;
    /**
     * Risk
     */
    risk: string;
    /**
     * Risk Percent
     */
    risk_percent: number;
    /**
     * Lots
     */
    lots: number;
    /**
     * Entry
     */
    entry: number;
    /**
     * Sl1 Pips
     */
    sl1_pips: number;
    /**
     * Tp1 Pips
     */
    tp1_pips: number;
    /**
     * Sl2 Pips
     */
    sl2_pips: number;
    /**
     * Tp2 Pips
     */
    tp2_pips: number;
    /**
     * Cancelled
     */
    cancelled: boolean;
    /**
     * Profit Or Loss
     */
    profit_or_loss: number;
    /**
     * Comments
     */
    comments: string;
    /**
     * Id
     */
    id: number;
    /**
     * Owner Id
     */
    owner_id: number;
};

/**
 * TradeUpdate
 */
export type TradeUpdate = {
    /**
     * Symbol
     */
    symbol?: string | null;
    /**
     * Entry Price
     */
    entry_price?: number | null;
    /**
     * Exit Price
     */
    exit_price?: number | null;
    /**
     * Quantity
     */
    quantity?: number | null;
    /**
     * Position Type
     */
    position_type?: string | null;
    /**
     * Profit Or Loss
     */
    profit_or_loss?: number | null;
    /**
     * Cancelled
     */
    cancelled?: boolean | null;
};

/**
 * UserCreate
 */
export type UserCreate = {
    /**
     * Username
     */
    username: string;
    /**
     * Email
     */
    email: string;
    /**
     * Password
     */
    password: string;
    role?: RoleEnum;
    /**
     * Initial Capital
     */
    initial_capital?: number;
};

/**
 * UserResponse
 */
export type UserResponse = {
    /**
     * Id
     */
    id: number;
    /**
     * Username
     */
    username: string;
    /**
     * Email
     */
    email: string;
    role: RoleEnum;
    /**
     * Valid
     */
    valid: boolean;
    /**
     * Initial Capital
     */
    initial_capital: number;
};

/**
 * UserUpdate
 */
export type UserUpdate = {
    /**
     * Username
     */
    username?: string | null;
    /**
     * Email
     */
    email?: string | null;
    /**
     * Role
     */
    role?: string | null;
    /**
     * Initial Capital
     */
    initial_capital?: number | null;
    /**
     * Valid
     */
    valid?: boolean | null;
};

/**
 * ValidationError
 */
export type ValidationError = {
    /**
     * Location
     */
    loc: Array<string | number>;
    /**
     * Message
     */
    msg: string;
    /**
     * Error Type
     */
    type: string;
};

export type GetUsersUsersGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/users/';
};

export type GetUsersUsersGetResponses = {
    /**
     * Response Get Users Users  Get
     *
     * Successful Response
     */
    200: Array<UserResponse>;
};

export type GetUsersUsersGetResponse = GetUsersUsersGetResponses[keyof GetUsersUsersGetResponses];

export type CreateUserUsersPostData = {
    body: UserCreate;
    path?: never;
    query?: never;
    url: '/users/';
};

export type CreateUserUsersPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CreateUserUsersPostError = CreateUserUsersPostErrors[keyof CreateUserUsersPostErrors];

export type CreateUserUsersPostResponses = {
    /**
     * Successful Response
     */
    200: UserResponse;
};

export type CreateUserUsersPostResponse = CreateUserUsersPostResponses[keyof CreateUserUsersPostResponses];

export type DeleteUserUsersUserIdDeleteData = {
    body?: never;
    path: {
        /**
         * User Id
         */
        user_id: number;
    };
    query?: never;
    url: '/users/{user_id}';
};

export type DeleteUserUsersUserIdDeleteErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type DeleteUserUsersUserIdDeleteError = DeleteUserUsersUserIdDeleteErrors[keyof DeleteUserUsersUserIdDeleteErrors];

export type DeleteUserUsersUserIdDeleteResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type GetUserUsersUserIdGetData = {
    body?: never;
    path: {
        /**
         * User Id
         */
        user_id: number;
    };
    query?: never;
    url: '/users/{user_id}';
};

export type GetUserUsersUserIdGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetUserUsersUserIdGetError = GetUserUsersUserIdGetErrors[keyof GetUserUsersUserIdGetErrors];

export type GetUserUsersUserIdGetResponses = {
    /**
     * Successful Response
     */
    200: UserResponse;
};

export type GetUserUsersUserIdGetResponse = GetUserUsersUserIdGetResponses[keyof GetUserUsersUserIdGetResponses];

export type UpdateUserUsersUserIdPutData = {
    body: UserUpdate;
    path: {
        /**
         * User Id
         */
        user_id: number;
    };
    query?: never;
    url: '/users/{user_id}';
};

export type UpdateUserUsersUserIdPutErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type UpdateUserUsersUserIdPutError = UpdateUserUsersUserIdPutErrors[keyof UpdateUserUsersUserIdPutErrors];

export type UpdateUserUsersUserIdPutResponses = {
    /**
     * Successful Response
     */
    200: UserResponse;
};

export type UpdateUserUsersUserIdPutResponse = UpdateUserUsersUserIdPutResponses[keyof UpdateUserUsersUserIdPutResponses];

export type ChangeOwnPasswordUsersMeChangePasswordPostData = {
    body: PasswordChange;
    path?: never;
    query?: never;
    url: '/users/me/change-password';
};

export type ChangeOwnPasswordUsersMeChangePasswordPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type ChangeOwnPasswordUsersMeChangePasswordPostError = ChangeOwnPasswordUsersMeChangePasswordPostErrors[keyof ChangeOwnPasswordUsersMeChangePasswordPostErrors];

export type ChangeOwnPasswordUsersMeChangePasswordPostResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type ChangeUserPasswordUsersUserIdChangePasswordPostData = {
    body: PasswordChange;
    path: {
        /**
         * User Id
         */
        user_id: number;
    };
    query?: never;
    url: '/users/{user_id}/change-password';
};

export type ChangeUserPasswordUsersUserIdChangePasswordPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type ChangeUserPasswordUsersUserIdChangePasswordPostError = ChangeUserPasswordUsersUserIdChangePasswordPostErrors[keyof ChangeUserPasswordUsersUserIdChangePasswordPostErrors];

export type ChangeUserPasswordUsersUserIdChangePasswordPostResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type LoginLoginPostData = {
    body: BodyLoginLoginPost;
    path?: never;
    query?: never;
    url: '/login';
};

export type LoginLoginPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type LoginLoginPostError = LoginLoginPostErrors[keyof LoginLoginPostErrors];

export type LoginLoginPostResponses = {
    /**
     * Successful Response
     */
    200: TokenSchema;
};

export type LoginLoginPostResponse = LoginLoginPostResponses[keyof LoginLoginPostResponses];

export type ReadUsersMeUsersMeGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/users/me';
};

export type ReadUsersMeUsersMeGetResponses = {
    /**
     * Successful Response
     */
    200: UserResponse;
};

export type ReadUsersMeUsersMeGetResponse = ReadUsersMeUsersMeGetResponses[keyof ReadUsersMeUsersMeGetResponses];

export type ListTradesTradesGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/trades/';
};

export type ListTradesTradesGetResponses = {
    /**
     * Response List Trades Trades  Get
     *
     * Successful Response
     */
    200: Array<TradeResponse>;
};

export type ListTradesTradesGetResponse = ListTradesTradesGetResponses[keyof ListTradesTradesGetResponses];

export type CreateTradeTradesPostData = {
    body: TradeCreate;
    path?: never;
    query?: never;
    url: '/trades/';
};

export type CreateTradeTradesPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CreateTradeTradesPostError = CreateTradeTradesPostErrors[keyof CreateTradeTradesPostErrors];

export type CreateTradeTradesPostResponses = {
    /**
     * Successful Response
     */
    200: TradeResponse;
};

export type CreateTradeTradesPostResponse = CreateTradeTradesPostResponses[keyof CreateTradeTradesPostResponses];

export type DeleteTradeTradesTradeIdDeleteData = {
    body?: never;
    path: {
        /**
         * Trade Id
         */
        trade_id: number;
    };
    query?: never;
    url: '/trades/{trade_id}';
};

export type DeleteTradeTradesTradeIdDeleteErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type DeleteTradeTradesTradeIdDeleteError = DeleteTradeTradesTradeIdDeleteErrors[keyof DeleteTradeTradesTradeIdDeleteErrors];

export type DeleteTradeTradesTradeIdDeleteResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type GetTradeTradesTradeIdGetData = {
    body?: never;
    path: {
        /**
         * Trade Id
         */
        trade_id: number;
    };
    query?: never;
    url: '/trades/{trade_id}';
};

export type GetTradeTradesTradeIdGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetTradeTradesTradeIdGetError = GetTradeTradesTradeIdGetErrors[keyof GetTradeTradesTradeIdGetErrors];

export type GetTradeTradesTradeIdGetResponses = {
    /**
     * Successful Response
     */
    200: TradeResponse;
};

export type GetTradeTradesTradeIdGetResponse = GetTradeTradesTradeIdGetResponses[keyof GetTradeTradesTradeIdGetResponses];

export type UpdateTradeTradesTradeIdPutData = {
    body: TradeUpdate;
    path: {
        /**
         * Trade Id
         */
        trade_id: number;
    };
    query?: never;
    url: '/trades/{trade_id}';
};

export type UpdateTradeTradesTradeIdPutErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type UpdateTradeTradesTradeIdPutError = UpdateTradeTradesTradeIdPutErrors[keyof UpdateTradeTradesTradeIdPutErrors];

export type UpdateTradeTradesTradeIdPutResponses = {
    /**
     * Successful Response
     */
    200: TradeResponse;
};

export type UpdateTradeTradesTradeIdPutResponse = UpdateTradeTradesTradeIdPutResponses[keyof UpdateTradeTradesTradeIdPutResponses];

export type CancelTradeTradesTradeIdCancelPostData = {
    body?: never;
    path: {
        /**
         * Trade Id
         */
        trade_id: number;
    };
    query?: never;
    url: '/trades/{trade_id}/cancel';
};

export type CancelTradeTradesTradeIdCancelPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CancelTradeTradesTradeIdCancelPostError = CancelTradeTradesTradeIdCancelPostErrors[keyof CancelTradeTradesTradeIdCancelPostErrors];

export type CancelTradeTradesTradeIdCancelPostResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type GetReportReportGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/report/';
};

export type GetReportReportGetResponses = {
    /**
     * Successful Response
     */
    200: ReportResponse;
};

export type GetReportReportGetResponse = GetReportReportGetResponses[keyof GetReportReportGetResponses];

export type HealthCheckHealthGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/health';
};

export type HealthCheckHealthGetResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type RootGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/';
};

export type RootGetResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};
